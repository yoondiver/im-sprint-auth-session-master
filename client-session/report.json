{
  "stats": {
    "suites": 3,
    "tests": 7,
    "passes": 7,
    "pending": 0,
    "failures": 0,
    "start": "2022-03-16T15:10:59.328Z",
    "end": "2022-03-16T15:11:02.411Z",
    "duration": 3083
  },
  "tests": [
    {
      "title": "props에 userData 객체가 존재해야 합니다",
      "fullTitle": "Authentication - Client Mypage Component props에 userData 객체가 존재해야 합니다",
      "duration": 16,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "로그아웃 버튼이 클릭된 경우, POST `/users/logout` 요청을 보내야합니다",
      "fullTitle": "Authentication - Client Mypage Component 로그아웃 버튼이 클릭된 경우, POST `/users/logout` 요청을 보내야합니다",
      "duration": 505,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "로그아웃 요청이 성공한 이후, logoutHandler 함수가 호출되어야 합니다.",
      "fullTitle": "Authentication - Client Mypage Component 로그아웃 요청이 성공한 이후, logoutHandler 함수가 호출되어야 합니다.",
      "duration": 507,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "로그인 버튼이 클릭된경우, POST `/login` 요청을 보내야 합니다",
      "fullTitle": "Authentication - Client Login Component 로그인 버튼이 클릭된경우, POST `/login` 요청을 보내야 합니다",
      "duration": 519,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "로그인에 성공한 경우, `loginHandler` 함수가 호출되어야 합니다",
      "fullTitle": "Authentication - Client Login Component 로그인에 성공한 경우, `loginHandler` 함수가 호출되어야 합니다",
      "duration": 510,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "로그인 이후 GET `/users/userinfo` 요청을 통해 유저정보를 받아와야 합니다",
      "fullTitle": "Authentication - Client Login Component 로그인 이후 GET `/users/userinfo` 요청을 통해 유저정보를 받아와야 합니다",
      "duration": 511,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "성공적으로 GET `/users/userinfo`요청이 완료된 이후, `setUserInfo` 함수가 실행되어야 합니다",
      "fullTitle": "Authentication - Client Login Component 성공적으로 GET `/users/userinfo`요청이 완료된 이후, `setUserInfo` 함수가 실행되어야 합니다",
      "duration": 510,
      "currentRetry": 0,
      "err": {}
    }
  ],
  "pending": [],
  "failures": [],
  "passes": [
    {
      "title": "props에 userData 객체가 존재해야 합니다",
      "fullTitle": "Authentication - Client Mypage Component props에 userData 객체가 존재해야 합니다",
      "duration": 16,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "로그아웃 버튼이 클릭된 경우, POST `/users/logout` 요청을 보내야합니다",
      "fullTitle": "Authentication - Client Mypage Component 로그아웃 버튼이 클릭된 경우, POST `/users/logout` 요청을 보내야합니다",
      "duration": 505,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "로그아웃 요청이 성공한 이후, logoutHandler 함수가 호출되어야 합니다.",
      "fullTitle": "Authentication - Client Mypage Component 로그아웃 요청이 성공한 이후, logoutHandler 함수가 호출되어야 합니다.",
      "duration": 507,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "로그인 버튼이 클릭된경우, POST `/login` 요청을 보내야 합니다",
      "fullTitle": "Authentication - Client Login Component 로그인 버튼이 클릭된경우, POST `/login` 요청을 보내야 합니다",
      "duration": 519,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "로그인에 성공한 경우, `loginHandler` 함수가 호출되어야 합니다",
      "fullTitle": "Authentication - Client Login Component 로그인에 성공한 경우, `loginHandler` 함수가 호출되어야 합니다",
      "duration": 510,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "로그인 이후 GET `/users/userinfo` 요청을 통해 유저정보를 받아와야 합니다",
      "fullTitle": "Authentication - Client Login Component 로그인 이후 GET `/users/userinfo` 요청을 통해 유저정보를 받아와야 합니다",
      "duration": 511,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "성공적으로 GET `/users/userinfo`요청이 완료된 이후, `setUserInfo` 함수가 실행되어야 합니다",
      "fullTitle": "Authentication - Client Login Component 성공적으로 GET `/users/userinfo`요청이 완료된 이후, `setUserInfo` 함수가 실행되어야 합니다",
      "duration": 510,
      "currentRetry": 0,
      "err": {}
    }
  ]
}