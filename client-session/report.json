{
  "stats": {
    "suites": 3,
    "tests": 7,
    "passes": 0,
    "pending": 0,
    "failures": 7,
    "start": "2022-03-16T14:34:49.034Z",
    "end": "2022-03-16T14:34:52.126Z",
    "duration": 3092
  },
  "tests": [
    {
      "title": "props에 userData 객체가 존재해야 합니다",
      "fullTitle": "Authentication - Client Mypage Component props에 userData 객체가 존재해야 합니다",
      "duration": 15,
      "currentRetry": 0,
      "err": {
        "message": "expected 'FILL_ME_IN' to deeply equal 'test'",
        "showDiff": true,
        "actual": "FILL_ME_IN",
        "expected": "test",
        "operator": "strictEqual",
        "stack": "AssertionError: expected 'FILL_ME_IN' to deeply equal 'test'\n    at Context.<anonymous> (__tests__/client.test.js:34:47)\n    at processImmediate (node:internal/timers:464:21)"
      }
    },
    {
      "title": "로그아웃 버튼이 클릭된 경우, POST `/users/logout` 요청을 보내야합니다",
      "fullTitle": "Authentication - Client Mypage Component 로그아웃 버튼이 클릭된 경우, POST `/users/logout` 요청을 보내야합니다",
      "duration": 508,
      "currentRetry": 0,
      "err": {
        "stack": "AssertionError [ERR_ASSERTION]: Mocks not yet satisfied:\nPOST https://localhost:4000/users/logout\n    at Scope.done (node_modules/nock/lib/scope.js:166:12)\n    at Timeout._onTimeout (__tests__/client.test.js:46:15)\n    at listOnTimeout (node:internal/timers:557:17)\n    at processTimers (node:internal/timers:500:7)",
        "message": "Mocks not yet satisfied:\nPOST https://localhost:4000/users/logout",
        "generatedMessage": false,
        "name": "AssertionError",
        "code": "ERR_ASSERTION",
        "actual": "false",
        "expected": "true",
        "operator": "==",
        "uncaught": true
      }
    },
    {
      "title": "로그아웃 요청이 성공한 이후, logoutHandler 함수가 호출되어야 합니다.",
      "fullTitle": "Authentication - Client Mypage Component 로그아웃 요청이 성공한 이후, logoutHandler 함수가 호출되어야 합니다.",
      "duration": 507,
      "currentRetry": 0,
      "err": {
        "message": "expected +0 to deeply equal 1",
        "showDiff": true,
        "actual": "0",
        "expected": "1",
        "operator": "strictEqual",
        "stack": "AssertionError: expected +0 to deeply equal 1\n    at Timeout._onTimeout (__tests__/client.test.js:67:34)\n    at listOnTimeout (node:internal/timers:557:17)\n    at processTimers (node:internal/timers:500:7)",
        "uncaught": true
      }
    },
    {
      "title": "로그인 버튼이 클릭된경우, POST `/login` 요청을 보내야 합니다",
      "fullTitle": "Authentication - Client Login Component 로그인 버튼이 클릭된경우, POST `/login` 요청을 보내야 합니다",
      "duration": 517,
      "currentRetry": 0,
      "err": {
        "stack": "AssertionError [ERR_ASSERTION]: Mocks not yet satisfied:\nPOST https://localhost:4000/users/login\n    at Scope.done (node_modules/nock/lib/scope.js:166:12)\n    at Timeout._onTimeout (__tests__/client.test.js:92:15)\n    at listOnTimeout (node:internal/timers:557:17)\n    at processTimers (node:internal/timers:500:7)",
        "message": "Mocks not yet satisfied:\nPOST https://localhost:4000/users/login",
        "generatedMessage": false,
        "name": "AssertionError",
        "code": "ERR_ASSERTION",
        "actual": "false",
        "expected": "true",
        "operator": "==",
        "uncaught": true
      }
    },
    {
      "title": "로그인에 성공한 경우, `loginHandler` 함수가 호출되어야 합니다",
      "fullTitle": "Authentication - Client Login Component 로그인에 성공한 경우, `loginHandler` 함수가 호출되어야 합니다",
      "duration": 510,
      "currentRetry": 0,
      "err": {
        "message": "expected +0 to deeply equal 1",
        "showDiff": true,
        "actual": "0",
        "expected": "1",
        "operator": "strictEqual",
        "stack": "AssertionError: expected +0 to deeply equal 1\n    at Timeout._onTimeout (__tests__/client.test.js:118:34)\n    at listOnTimeout (node:internal/timers:557:17)\n    at processTimers (node:internal/timers:500:7)",
        "uncaught": true
      }
    },
    {
      "title": "로그인 이후 GET `/users/userinfo` 요청을 통해 유저정보를 받아와야 합니다",
      "fullTitle": "Authentication - Client Login Component 로그인 이후 GET `/users/userinfo` 요청을 통해 유저정보를 받아와야 합니다",
      "duration": 510,
      "currentRetry": 0,
      "err": {
        "stack": "AssertionError [ERR_ASSERTION]: Mocks not yet satisfied:\nGET https://localhost:4000/users/userinfo\n    at Scope.done (node_modules/nock/lib/scope.js:166:12)\n    at Timeout._onTimeout (__tests__/client.test.js:156:21)\n    at listOnTimeout (node:internal/timers:557:17)\n    at processTimers (node:internal/timers:500:7)",
        "message": "Mocks not yet satisfied:\nGET https://localhost:4000/users/userinfo",
        "generatedMessage": false,
        "name": "AssertionError",
        "code": "ERR_ASSERTION",
        "actual": "false",
        "expected": "true",
        "operator": "==",
        "uncaught": true
      }
    },
    {
      "title": "성공적으로 GET `/users/userinfo`요청이 완료된 이후, `setUserInfo` 함수가 실행되어야 합니다",
      "fullTitle": "Authentication - Client Login Component 성공적으로 GET `/users/userinfo`요청이 완료된 이후, `setUserInfo` 함수가 실행되어야 합니다",
      "duration": 509,
      "currentRetry": 0,
      "err": {
        "message": "expected +0 to deeply equal 1",
        "showDiff": true,
        "actual": "0",
        "expected": "1",
        "operator": "strictEqual",
        "stack": "AssertionError: expected +0 to deeply equal 1\n    at Timeout._onTimeout (__tests__/client.test.js:195:34)\n    at listOnTimeout (node:internal/timers:557:17)\n    at processTimers (node:internal/timers:500:7)",
        "uncaught": true
      }
    }
  ],
  "pending": [],
  "failures": [
    {
      "title": "props에 userData 객체가 존재해야 합니다",
      "fullTitle": "Authentication - Client Mypage Component props에 userData 객체가 존재해야 합니다",
      "duration": 15,
      "currentRetry": 0,
      "err": {
        "message": "expected 'FILL_ME_IN' to deeply equal 'test'",
        "showDiff": true,
        "actual": "FILL_ME_IN",
        "expected": "test",
        "operator": "strictEqual",
        "stack": "AssertionError: expected 'FILL_ME_IN' to deeply equal 'test'\n    at Context.<anonymous> (__tests__/client.test.js:34:47)\n    at processImmediate (node:internal/timers:464:21)"
      }
    },
    {
      "title": "로그아웃 버튼이 클릭된 경우, POST `/users/logout` 요청을 보내야합니다",
      "fullTitle": "Authentication - Client Mypage Component 로그아웃 버튼이 클릭된 경우, POST `/users/logout` 요청을 보내야합니다",
      "duration": 508,
      "currentRetry": 0,
      "err": {
        "stack": "AssertionError [ERR_ASSERTION]: Mocks not yet satisfied:\nPOST https://localhost:4000/users/logout\n    at Scope.done (node_modules/nock/lib/scope.js:166:12)\n    at Timeout._onTimeout (__tests__/client.test.js:46:15)\n    at listOnTimeout (node:internal/timers:557:17)\n    at processTimers (node:internal/timers:500:7)",
        "message": "Mocks not yet satisfied:\nPOST https://localhost:4000/users/logout",
        "generatedMessage": false,
        "name": "AssertionError",
        "code": "ERR_ASSERTION",
        "actual": "false",
        "expected": "true",
        "operator": "==",
        "uncaught": true
      }
    },
    {
      "title": "로그아웃 요청이 성공한 이후, logoutHandler 함수가 호출되어야 합니다.",
      "fullTitle": "Authentication - Client Mypage Component 로그아웃 요청이 성공한 이후, logoutHandler 함수가 호출되어야 합니다.",
      "duration": 507,
      "currentRetry": 0,
      "err": {
        "message": "expected +0 to deeply equal 1",
        "showDiff": true,
        "actual": "0",
        "expected": "1",
        "operator": "strictEqual",
        "stack": "AssertionError: expected +0 to deeply equal 1\n    at Timeout._onTimeout (__tests__/client.test.js:67:34)\n    at listOnTimeout (node:internal/timers:557:17)\n    at processTimers (node:internal/timers:500:7)",
        "uncaught": true
      }
    },
    {
      "title": "로그인 버튼이 클릭된경우, POST `/login` 요청을 보내야 합니다",
      "fullTitle": "Authentication - Client Login Component 로그인 버튼이 클릭된경우, POST `/login` 요청을 보내야 합니다",
      "duration": 517,
      "currentRetry": 0,
      "err": {
        "stack": "AssertionError [ERR_ASSERTION]: Mocks not yet satisfied:\nPOST https://localhost:4000/users/login\n    at Scope.done (node_modules/nock/lib/scope.js:166:12)\n    at Timeout._onTimeout (__tests__/client.test.js:92:15)\n    at listOnTimeout (node:internal/timers:557:17)\n    at processTimers (node:internal/timers:500:7)",
        "message": "Mocks not yet satisfied:\nPOST https://localhost:4000/users/login",
        "generatedMessage": false,
        "name": "AssertionError",
        "code": "ERR_ASSERTION",
        "actual": "false",
        "expected": "true",
        "operator": "==",
        "uncaught": true
      }
    },
    {
      "title": "로그인에 성공한 경우, `loginHandler` 함수가 호출되어야 합니다",
      "fullTitle": "Authentication - Client Login Component 로그인에 성공한 경우, `loginHandler` 함수가 호출되어야 합니다",
      "duration": 510,
      "currentRetry": 0,
      "err": {
        "message": "expected +0 to deeply equal 1",
        "showDiff": true,
        "actual": "0",
        "expected": "1",
        "operator": "strictEqual",
        "stack": "AssertionError: expected +0 to deeply equal 1\n    at Timeout._onTimeout (__tests__/client.test.js:118:34)\n    at listOnTimeout (node:internal/timers:557:17)\n    at processTimers (node:internal/timers:500:7)",
        "uncaught": true
      }
    },
    {
      "title": "로그인 이후 GET `/users/userinfo` 요청을 통해 유저정보를 받아와야 합니다",
      "fullTitle": "Authentication - Client Login Component 로그인 이후 GET `/users/userinfo` 요청을 통해 유저정보를 받아와야 합니다",
      "duration": 510,
      "currentRetry": 0,
      "err": {
        "stack": "AssertionError [ERR_ASSERTION]: Mocks not yet satisfied:\nGET https://localhost:4000/users/userinfo\n    at Scope.done (node_modules/nock/lib/scope.js:166:12)\n    at Timeout._onTimeout (__tests__/client.test.js:156:21)\n    at listOnTimeout (node:internal/timers:557:17)\n    at processTimers (node:internal/timers:500:7)",
        "message": "Mocks not yet satisfied:\nGET https://localhost:4000/users/userinfo",
        "generatedMessage": false,
        "name": "AssertionError",
        "code": "ERR_ASSERTION",
        "actual": "false",
        "expected": "true",
        "operator": "==",
        "uncaught": true
      }
    },
    {
      "title": "성공적으로 GET `/users/userinfo`요청이 완료된 이후, `setUserInfo` 함수가 실행되어야 합니다",
      "fullTitle": "Authentication - Client Login Component 성공적으로 GET `/users/userinfo`요청이 완료된 이후, `setUserInfo` 함수가 실행되어야 합니다",
      "duration": 509,
      "currentRetry": 0,
      "err": {
        "message": "expected +0 to deeply equal 1",
        "showDiff": true,
        "actual": "0",
        "expected": "1",
        "operator": "strictEqual",
        "stack": "AssertionError: expected +0 to deeply equal 1\n    at Timeout._onTimeout (__tests__/client.test.js:195:34)\n    at listOnTimeout (node:internal/timers:557:17)\n    at processTimers (node:internal/timers:500:7)",
        "uncaught": true
      }
    }
  ],
  "passes": []
}